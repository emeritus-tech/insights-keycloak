{"version":3,"file":"DisplayOrder-BglivDc3.js","sources":["../../src/identity-providers/component/RedirectUrl.tsx","../../src/identity-providers/component/DisplayOrder.tsx"],"sourcesContent":["import { ClipboardCopy, FormGroup } from \"@patternfly/react-core\";\nimport { useTranslation } from \"react-i18next\";\nimport { HelpItem, useEnvironment } from \"@keycloak/keycloak-ui-shared\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { addTrailingSlash } from \"../../util\";\n\nexport const RedirectUrl = ({ id }: { id: string }) => {\n  const { environment } = useEnvironment();\n  const { t } = useTranslation();\n\n  const { realm } = useRealm();\n  const callbackUrl = `${addTrailingSlash(\n    environment.serverBaseUrl,\n  )}realms/${realm}/broker`;\n\n  return (\n    <FormGroup\n      label={t(\"redirectURI\")}\n      labelIcon={\n        <HelpItem helpText={t(\"redirectURIHelp\")} fieldLabelId=\"redirectURI\" />\n      }\n      fieldId=\"kc-redirect-uri\"\n    >\n      <ClipboardCopy\n        isReadOnly\n      >{`${callbackUrl}/${id}/endpoint`}</ClipboardCopy>\n    </FormGroup>\n  );\n};\n","import { FormGroup, TextInput } from \"@patternfly/react-core\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HelpItem } from \"@keycloak/keycloak-ui-shared\";\n\nexport const DisplayOrder = () => {\n  const { t } = useTranslation();\n\n  const { control } = useFormContext();\n\n  return (\n    <FormGroup\n      label={t(\"displayOrder\")}\n      labelIcon={\n        <HelpItem\n          helpText={t(\"displayOrderHelp\")}\n          fieldLabelId=\"displayOrder\"\n        />\n      }\n      fieldId=\"kc-display-order\"\n    >\n      <Controller\n        name=\"config.guiOrder\"\n        control={control}\n        defaultValue=\"\"\n        render={({ field }) => (\n          <TextInput\n            id=\"kc-display-order\"\n            type=\"number\"\n            value={field.value}\n            data-testid=\"displayOrder\"\n            min={0}\n            onChange={(_event, value) => {\n              const num = Number(value);\n              field.onChange(value === \"\" ? value : num < 0 ? 0 : num);\n            }}\n          />\n        )}\n      />\n    </FormGroup>\n  );\n};\n"],"names":["RedirectUrl","id","environment","useEnvironment","t","useTranslation","realm","useRealm","callbackUrl","addTrailingSlash","jsx","FormGroup","HelpItem","ClipboardCopy","DisplayOrder","control","useFormContext","Controller","field","TextInput","_event","value","num"],"mappings":"2LAMO,MAAMA,EAAc,CAAC,CAAE,GAAAC,KAAyB,CAC/C,KAAA,CAAE,YAAAC,GAAgBC,IAClB,CAAE,EAAAC,GAAMC,IAER,CAAE,MAAAC,GAAUC,IACZC,EAAc,GAAGC,EACrBP,EAAY,aAAA,CACb,UAAUI,CAAK,UAGd,OAAAI,EAACC,EAAA,CACC,MAAOP,EAAE,aAAa,EACtB,YACGQ,EAAS,CAAA,SAAUR,EAAE,iBAAiB,EAAG,aAAa,cAAc,EAEvE,QAAQ,kBAER,SAAAM,EAACG,EAAA,CACC,WAAU,GACV,SAAA,GAAGL,CAAW,IAAIP,CAAE,WAAA,CAAY,CAAA,CAAA,CAGxC,ECtBaa,EAAe,IAAM,CAC1B,KAAA,CAAE,EAAAV,GAAMC,IAER,CAAE,QAAAU,GAAYC,IAGlB,OAAAN,EAACC,EAAA,CACC,MAAOP,EAAE,cAAc,EACvB,UACEM,EAACE,EAAA,CACC,SAAUR,EAAE,kBAAkB,EAC9B,aAAa,cAAA,CACf,EAEF,QAAQ,mBAER,SAAAM,EAACO,EAAA,CACC,KAAK,kBACL,QAAAF,EACA,aAAa,GACb,OAAQ,CAAC,CAAE,MAAAG,CAAA,IACTR,EAACS,EAAA,CACC,GAAG,mBACH,KAAK,SACL,MAAOD,EAAM,MACb,cAAY,eACZ,IAAK,EACL,SAAU,CAACE,EAAQC,IAAU,CACrB,MAAAC,EAAM,OAAOD,CAAK,EACxBH,EAAM,SAASG,IAAU,GAAKA,EAAQC,EAAM,EAAI,EAAIA,CAAG,CACzD,CAAA,CACF,CAAA,CAEJ,CAAA,CAAA,CAGN"}