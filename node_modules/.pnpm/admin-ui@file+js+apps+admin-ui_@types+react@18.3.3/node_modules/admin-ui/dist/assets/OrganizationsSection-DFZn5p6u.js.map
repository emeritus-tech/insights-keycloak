{"version":3,"file":"OrganizationsSection-DFZn5p6u.js","sources":["../../src/organizations/OrganizationsSection.tsx"],"sourcesContent":["import OrganizationRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/organizationRepresentation\";\nimport {\n  Badge,\n  Button,\n  ButtonVariant,\n  Chip,\n  ChipGroup,\n  PageSection,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { TableText } from \"@patternfly/react-table\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../admin-client\";\nimport { useAlerts } from \"../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../components/confirm-dialog/ConfirmDialog\";\nimport { ListEmptyState } from \"../components/list-empty-state/ListEmptyState\";\nimport { KeycloakDataTable } from \"../components/table-toolbar/KeycloakDataTable\";\nimport { ViewHeader } from \"../components/view-header/ViewHeader\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { toAddOrganization } from \"./routes/AddOrganization\";\nimport { toEditOrganization } from \"./routes/EditOrganization\";\n\nconst OrgDetailLink = (organization: any) => {\n  const { t } = useTranslation();\n  const { realm } = useRealm();\n  return (\n    <TableText wrapModifier=\"truncate\">\n      <Link\n        key={organization.id}\n        to={toEditOrganization({\n          realm,\n          id: organization.id!,\n          tab: \"settings\",\n        })}\n      >\n        {organization.name}\n        {!organization.enabled && (\n          <Badge\n            key={`${organization.id}-disabled`}\n            isRead\n            className=\"pf-v5-u-ml-sm\"\n          >\n            {t(\"disabled\")}\n          </Badge>\n        )}\n      </Link>\n    </TableText>\n  );\n};\n\nconst Domains = (org: OrganizationRepresentation) => {\n  const { t } = useTranslation();\n  return (\n    <ChipGroup\n      numChips={2}\n      expandedText={t(\"hide\")}\n      collapsedText={t(\"showRemaining\")}\n    >\n      {org.domains?.map((dn) => (\n        <Chip key={dn.name} isReadOnly>\n          {dn.name}\n        </Chip>\n      ))}\n    </ChipGroup>\n  );\n};\n\nexport default function OrganizationSection() {\n  const { adminClient } = useAdminClient();\n  const { realm } = useRealm();\n  const { t } = useTranslation();\n  const { addAlert, addError } = useAlerts();\n  const navigate = useNavigate();\n\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey(key + 1);\n\n  const [selectedOrg, setSelectedOrg] = useState<OrganizationRepresentation>();\n\n  async function loader(first?: number, max?: number, search?: string) {\n    return await adminClient.organizations.find({ first, max, search });\n  }\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"organizationDelete\",\n    messageKey: \"organizationDeleteConfirm\",\n    continueButtonLabel: \"delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.organizations.delById({\n          id: selectedOrg!.id!,\n        });\n        addAlert(t(\"organizationDeletedSuccess\"));\n        refresh();\n      } catch (error) {\n        addError(\"organizationDeleteError\", error);\n      }\n    },\n  });\n\n  return (\n    <>\n      <ViewHeader\n        titleKey=\"organizationsList\"\n        subKey=\"organizationsExplain\"\n        divider\n      />\n      <PageSection variant=\"light\" className=\"pf-v5-u-p-0\">\n        <DeleteConfirm />\n        <KeycloakDataTable\n          key={key}\n          loader={loader}\n          isPaginated\n          ariaLabelKey=\"organizationList\"\n          searchPlaceholderKey=\"searchOrganization\"\n          toolbarItem={\n            <ToolbarItem>\n              <Button\n                data-testid=\"addOrganization\"\n                component={(props) => (\n                  <Link {...props} to={toAddOrganization({ realm })} />\n                )}\n              >\n                {t(\"createOrganization\")}\n              </Button>\n            </ToolbarItem>\n          }\n          actions={[\n            {\n              title: t(\"delete\"),\n              onRowClick: (org) => {\n                setSelectedOrg(org);\n                toggleDeleteDialog();\n              },\n            },\n          ]}\n          columns={[\n            {\n              name: \"name\",\n              displayKey: \"name\",\n              cellRenderer: OrgDetailLink,\n            },\n            {\n              name: \"domains\",\n              displayKey: \"domains\",\n              cellRenderer: Domains,\n            },\n            {\n              name: \"description\",\n              displayKey: \"description\",\n            },\n          ]}\n          emptyState={\n            <ListEmptyState\n              message={t(\"emptyOrganizations\")}\n              instructions={t(\"emptyOrganizationsInstructions\")}\n              primaryActionText={t(\"createOrganization\")}\n              onPrimaryAction={() => navigate(toAddOrganization({ realm }))}\n            />\n          }\n        />\n      </PageSection>\n    </>\n  );\n}\n"],"names":["OrgDetailLink","organization","t","useTranslation","realm","useRealm","jsx","TableText","jsxs","Link","toEditOrganization","Badge","Domains","org","ChipGroup","dn","Chip","OrganizationSection","adminClient","useAdminClient","addAlert","addError","useAlerts","navigate","useNavigate","key","setKey","useState","refresh","selectedOrg","setSelectedOrg","loader","first","max","search","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","ButtonVariant","error","Fragment","ViewHeader","PageSection","KeycloakDataTable","ToolbarItem","Button","props","toAddOrganization","ListEmptyState"],"mappings":"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"}