import{jsxs as r,Fragment as w,jsx as t}from"react/jsx-runtime";import{u as h,a as F,d as b,c as g,f as v,g as y,P as A,F as S,h as C,A as I,i as T,j as k,L as H,k as L,l as i,m as N}from"./main-DXDh8SEc.js";import{F as P}from"./FormAccess-Bcw0IOUQ.js";import{V}from"./ViewHeader-DTd0a4sz.js";import{N as j}from"./NameDescription-BfzAPObD.js";import"react";import"react-dom";import"./copy-icon-C4kUIpk5.js";const c=["basic-flow","client-flow"];function U(){const{adminClient:m}=h(),{t:e}=F(),u=b(),{realm:n}=g(),{addAlert:l}=v(),s=y(),{handleSubmit:d,formState:p}=s;return r(w,{children:[t(V,{titleKey:"createFlow",subKey:"authenticationCreateFlowHelp"}),t(A,{variant:"light",children:t(S,{...s,children:r(P,{isHorizontal:!0,role:"manage-authorization",onSubmit:d(async a=>{const f={...a,builtIn:!1,topLevel:!0};try{const{id:o}=await m.authenticationManagement.createFlow(f);l(e("flowCreatedSuccess"),i.success),u(N({realm:n,id:o,usedBy:"notInUse"}))}catch(o){l(e("flowCreateError",{error:o.response?.data?.errorMessage||o}),i.danger)}}),children:[t(j,{}),t(C,{name:"providerId",label:e("flowType"),labelIcon:e("topLevelFlowTypeHelp"),"aria-label":e("selectFlowType"),controller:{defaultValue:c[0]},options:c.map(a=>({key:a,value:e(`top-level-flow-type.${a}`)}))}),r(I,{children:[t(T,{formState:p,"data-testid":"create",allowInvalid:!0,allowNonDirty:!0,children:e("create")}),t(k,{"data-testid":"cancel",variant:"link",component:a=>t(H,{...a,to:L({realm:n})}),children:e("cancel")})]})]})})})]})}export{U as default};
//# sourceMappingURL=CreateFlow-Bstu8Cxx.js.map
