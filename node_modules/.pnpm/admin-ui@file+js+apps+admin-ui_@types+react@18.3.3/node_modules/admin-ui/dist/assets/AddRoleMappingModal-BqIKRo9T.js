import{jsxs as B,Fragment as T,jsx as l}from"react/jsx-runtime";import{useState as R}from"react";import{cq as N,u as _,a as G,f as W,B as z,l as X,a2 as D,bS as Y,j as x,bK as Z,aC as U,bG as ee,b3 as te,v as se,M as ie,r as ne,J as le,K as oe,N as ae,D as re}from"./main-DXDh8SEc.js";import{L as H}from"./PaginatingTableToolbar-zbU1l_6-.js";import{K as J}from"./KeycloakDataTable-B3eTS_qk.js";import{u as ce}from"./ConfirmDialog-o8TAA2Kj.js";import{F as de}from"./filter-icon-Do5tIUfA.js";import{T as pe}from"./Td-BmSS9qQq.js";const V={delete:["delClientRoleMappings","delRealmRoleMappings"],listEffective:["listRoleMappings","listCompositeRealmRoleMappings","listCompositeClientRoleMappings"],listAvailable:["listAvailableClientRoleMappings","listAvailableRealmRoleMappings"]},j={delete:["delClientScopeMappings","delRealmScopeMappings"],listEffective:["listScopeMappings","listCompositeRealmScopeMappings","listCompositeClientScopeMappings"],listAvailable:["listAvailableClientScopeMappings","listAvailableRealmScopeMappings"]},E={groups:V,users:V,clientScopes:j,clients:j,roles:{delete:["delCompositeRoles","delCompositeRoles"],listEffective:["getCompositeRoles","getCompositeRoles","getCompositeRolesForClient"],listAvailable:["listRoles","find"]}},me=(t,e)=>t[e],S=(t,e,i,...n)=>me(t,e)[i](...n),ge=(t,e,i,n)=>n.map(o=>{const c={id:o.role.id,name:o.role.name},s=E[e]?.delete[o.client?0:1];return S(t,e,s,{id:i,clientUniqueId:o.client?.id,client:o.client?.id,roles:[c]},[c])}),fe=async(t,e,i)=>{const n=E[e].listEffective[0],o=S(t,e,n,{id:i});if(e!=="roles")return o;const c=await o;return{clientMappings:await Promise.all(c.filter(g=>g.clientRole).map(async g=>{const d=await t.clients.findOne({id:g.containerId});return g.containerId=d?.clientId,{...d,mappings:[g]}})),realmMappings:c.filter(g=>!g.clientRole)}},ue=async(t,e,i)=>{const n=E[e].listEffective[1];if(e!=="roles")return(await S(t,e,n,{id:i})).map(s=>({role:s}));const o=await S(t,e,n,{id:i}),c=await Promise.all(o.filter(s=>s.composite).map(s=>S(t,e,n,{id:s.id})));return[...o,...c.flat()].map(s=>({role:s}))},Re=async(t,e,i)=>{const n=E[e].listAvailable[1];return(await S(t,e,n,i)).map(o=>({role:o}))},q=async(t,{id:e,type:i,first:n,max:o,search:c,endpoint:s})=>N(t,`/ui-ext/${s}/${i}/${e}`,{first:(n||0).toString(),max:(o||10).toString(),search:c||""}),he=(t,e)=>q(t,{...e,endpoint:"available-roles"}),ye=(t,e)=>q(t,{...e,endpoint:"effective-roles"}),Be=(t,e)=>N(t,"ui-ext/brute-force-user",e),Te=(t,e)=>q(t,{...e,endpoint:"authentication-management"}),Ce=(t,e,i)=>[...i?t.map(n=>({...n,role:{...n.role,isInherited:!1}})):e.map(n=>({...n,role:{...n.role,isInherited:t.find(o=>o.role.id===n.role.id)===void 0}}))],Q=({role:t,client:e})=>B(T,{children:[e?.clientId&&l(ee,{isRead:!0,className:"keycloak-admin--role-mapping__client-name",children:e.clientId}),t.name]}),De=({name:t,id:e,type:i,isManager:n=!0,save:o})=>{const{adminClient:c}=_(),{t:s}=G(),{addAlert:g,addError:d}=W(),[M,F]=R(0),u=()=>F(M+1),[h,f]=R(!0),[k,v]=R(!1),[b,y]=R([]),L=async r=>{await o(r),u()},K=async()=>{let r=[],C=[];h||(r=await ue(c,i,e),C=(await ye(c,{type:i,id:e})).map(a=>({client:{clientId:a.client,id:a.clientId},role:{id:a.id,name:a.role,description:a.description}})),r=r.filter(a=>!C.some(m=>m.role.id===a.role.id)));const p=await fe(c,i,e),w=p.realmMappings?.map(a=>({role:a}))||[],A=Object.values(p.clientMappings||{}).map(a=>a.mappings.map(m=>({client:{clientId:a.client,...a},role:m}))).flat();return[...Ce([...A,...w],[...C,...r],h)]},[I,$]=ce({titleKey:"removeMappingTitle",messageKey:s("removeMappingConfirm",{count:b.length}),continueButtonLabel:"remove",continueButtonVariant:z.danger,onCancel:()=>{y([]),u()},onConfirm:async()=>{try{await Promise.all(ge(c,i,e,b)),g(s("clientScopeRemoveSuccess"),X.success),y([]),u()}catch(r){d("clientScopeRemoveError",r)}}});return B(T,{children:[k&&l(ve,{id:e,type:i,name:t,onAssign:L,onClose:()=>v(!1)}),l($,{}),l(J,{"data-testid":"assigned-roles",loader:K,canSelectAll:!0,onSelect:r=>y(r),searchPlaceholderKey:"searchByName",ariaLabelKey:"clientScopeList",isRowDisabled:r=>r.role.isInherited||!1,toolbarItem:B(T,{children:[l(D,{children:l(Y,{label:s("hideInheritedRoles"),id:"hideInheritedRoles","data-testid":"hideInheritedRoles",isChecked:h,onChange:(r,C)=>{f(C),u()}})}),n&&B(T,{children:[l(D,{children:l(x,{"data-testid":"assignRole",onClick:()=>v(!0),children:s("assignRole")})}),l(D,{children:l(x,{variant:"link","data-testid":"unAssignRole",onClick:I,isDisabled:b.length===0,children:s("unAssignRole")})})]})]}),actions:n?[{title:s("unAssignRole"),onRowClick:async r=>(y([r]),I(),!1)}]:[],columns:[{name:"role.name",displayKey:s("name"),transforms:[pe(30)],cellRenderer:Q},{name:"role.isInherited",displayKey:s("inherent"),cellFormatters:[Z(),U()]},{name:"role.description",displayKey:s("description"),cellFormatters:[U()]}],emptyState:l(H,{message:s(`noRoles-${i}`),instructions:s(`noRolesInstructions-${i}`),primaryActionText:s("assignRole"),onPrimaryAction:()=>v(!0),secondaryActions:[{text:s("showInheritedRoles"),onClick:()=>{f(!1),u()}}]})},`${e}${M}`)]})},ve=({id:t,name:e,type:i,isRadio:n=!1,isLDAPmapper:o,onAssign:c,onClose:s})=>{const{adminClient:g}=_(),{t:d}=G(),{hasAccess:M}=te(),F=M("view-realm")||M("query-users"),[u,h]=R(!1),[f,k]=R("clients"),[v,b]=R([]),[y,L]=R(0),K=()=>L(y+1),I=se(),$=({role:{name:p}})=>p?.toUpperCase(),r=async(p,w,A)=>{const a={first:p,max:w};A&&(a.search=A);const m=await Re(g,i,{...a,id:t});return I(m,$).map(O=>({role:O.role,id:O.role.id}))},C=async(p,w,A)=>{const a=await he(g,{id:t,type:i,first:p||0,max:w||10,search:A});return I(a.map(m=>({client:{clientId:m.client,id:m.clientId},role:{id:m.id,name:m.role,description:m.description},id:m.id})),({client:{clientId:m},role:{name:P}})=>`${m}${P}`)};return l(ie,{variant:ne.large,title:o?d("assignRole"):d("assignRolesTo",{client:e}),isOpen:!0,onClose:s,actions:[l(x,{"data-testid":"assign",isDisabled:v.length===0,variant:"primary",onClick:()=>{c(v),s()},children:d("assign")},"confirm"),l(x,{"data-testid":"cancel",variant:"link",onClick:s,children:d("cancel")},"cancel")],children:l(J,{onSelect:p=>b([...p]),searchPlaceholderKey:"searchByRoleName",isPaginated:!(f==="roles"&&i!=="roles"),searchTypeComponent:F&&l(D,{children:l(le,{onOpenChange:p=>h(p),onSelect:()=>{k(f==="roles"?"clients":"roles"),h(!1),K()},toggle:p=>l(oe,{"data-testid":"filter-type-dropdown",ref:p,onClick:()=>h(!u),icon:l(de,{}),children:d(f==="roles"?"filterByRoles":"filterByClients")}),isOpen:u,children:l(ae,{children:l(re,{"data-testid":f,children:d(f==="roles"?"filterByClients":"filterByRoles")},"filter-type")})})}),canSelectAll:!0,isRadio:n,loader:f==="roles"?r:C,ariaLabelKey:"roles",columns:[{name:"name",cellRenderer:Q},{name:"role.description",displayKey:"description"}],emptyState:l(H,{message:d("noRoles"),instructions:d("noRealmRolesToAssign"),secondaryActions:[{text:d("filterByClients"),onClick:()=>{k("clients"),K()}}]})},y)})};export{ve as A,De as R,Q as S,Be as a,Te as f};
//# sourceMappingURL=AddRoleMappingModal-BqIKRo9T.js.map
