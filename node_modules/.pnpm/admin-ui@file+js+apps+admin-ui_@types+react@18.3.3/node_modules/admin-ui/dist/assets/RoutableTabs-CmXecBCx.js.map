{"version":3,"file":"RoutableTabs-CmXecBCx.js","sources":["../../src/components/routable-tabs/RoutableTabs.tsx"],"sourcesContent":["import {\n  Tab,\n  TabProps,\n  Tabs,\n  TabsComponent,\n  TabsProps,\n} from \"@patternfly/react-core\";\nimport {\n  Children,\n  JSXElementConstructor,\n  PropsWithChildren,\n  ReactElement,\n  isValidElement,\n} from \"react\";\nimport {\n  Path,\n  generatePath,\n  matchPath,\n  useHref,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport { useServerInfo } from \"../../context/server-info/ServerInfoProvider\";\nimport { PageHandler } from \"../../page/PageHandler\";\nimport { TAB_PROVIDER } from \"../../page/PageList\";\nimport useIsFeatureEnabled, { Feature } from \"../../utils/useIsFeatureEnabled\";\n\n// TODO: Remove the custom 'children' props and type once the following issue has been resolved:\n// https://github.com/patternfly/patternfly-react/issues/6766\ntype ChildElement = ReactElement<TabProps, JSXElementConstructor<TabProps>>;\ntype Child = ChildElement | boolean | null | undefined;\n\n// TODO: Figure out why we need to omit 'ref' from the props.\ntype RoutableTabsProps = {\n  children: Child | Child[];\n  defaultLocation?: Partial<Path>;\n} & Omit<\n  TabsProps,\n  \"ref\" | \"activeKey\" | \"defaultActiveKey\" | \"component\" | \"children\"\n>;\n\nexport const RoutableTabs = ({\n  children,\n  defaultLocation,\n  ...otherProps\n}: RoutableTabsProps) => {\n  const { pathname } = useLocation();\n  const params = useParams();\n  const { componentTypes } = useServerInfo();\n  const tabs = componentTypes?.[TAB_PROVIDER] || [];\n  const isFeatureEnabled = useIsFeatureEnabled();\n\n  const matchedTabs = tabs\n    .filter((tab) => matchPath({ path: tab.metadata.path }, pathname))\n    .map((t) => ({\n      ...t,\n      pathname: generatePath(t.metadata.path, {\n        ...params,\n        ...t.metadata.params,\n      }),\n    }));\n  // Extract all keys from matchedTabs\n  const matchedTabsKeys = matchedTabs.map((t) => t.pathname);\n\n  // Extract event keys from children\n  const eventKeys = Children.toArray(children)\n    .filter((child): child is ChildElement => isValidElement(child))\n    .map((child) => child.props.eventKey.toString());\n\n  const allKeys = [...eventKeys, ...matchedTabsKeys];\n\n  // Determine if there is an exact match.\n  const exactMatch = allKeys.find(\n    (eventKey) => eventKey === decodeURI(pathname),\n  );\n\n  // Determine which event keys at least partially match the current path, then sort them so the nearest match ends up on top.\n  const nearestMatch = eventKeys\n    .filter((eventKey) => pathname.includes(eventKey))\n    .sort((a, b) => a.length - b.length)\n    .pop();\n\n  return (\n    <Tabs\n      activeKey={\n        exactMatch ?? nearestMatch ?? defaultLocation?.pathname ?? pathname\n      }\n      component={TabsComponent.nav}\n      inset={{\n        default: \"insetNone\",\n        xl: \"insetLg\",\n        \"2xl\": \"inset2xl\",\n      }}\n      {...otherProps}\n    >\n      {children as any}\n      {isFeatureEnabled(Feature.DeclarativeUI) &&\n        matchedTabs.map<any>((t) => (\n          <DynamicTab key={t.id} eventKey={t.pathname} title={t.id}>\n            <PageHandler page={t} providerType={TAB_PROVIDER} />\n          </DynamicTab>\n        ))}\n    </Tabs>\n  );\n};\n\ntype DynamicTabProps = {\n  title: string;\n  eventKey: string;\n};\n\nconst DynamicTab = ({\n  children,\n  ...props\n}: PropsWithChildren<DynamicTabProps>) => {\n  const href = useHref(props.eventKey);\n\n  return (\n    <Tab href={href} {...props}>\n      {children}\n    </Tab>\n  );\n};\n\nexport const useRoutableTab = (to: Partial<Path>) => ({\n  eventKey: to.pathname ?? \"\",\n  href: useHref(to),\n});\n"],"names":["RoutableTabs","children","defaultLocation","otherProps","pathname","useLocation","params","useParams","componentTypes","useServerInfo","tabs","TAB_PROVIDER","isFeatureEnabled","useIsFeatureEnabled","matchedTabs","tab","matchPath","t","generatePath","matchedTabsKeys","eventKeys","Children","child","isValidElement","exactMatch","eventKey","nearestMatch","b","jsxs","Tabs","TabsComponent","Feature","jsx","DynamicTab","PageHandler","props","href","useHref","Tab","useRoutableTab","to"],"mappings":"8VAyCO,MAAMA,EAAe,CAAC,CAC3B,SAAAC,EACA,gBAAAC,EACA,GAAGC,CACL,IAAyB,CACjB,KAAA,CAAE,SAAAC,GAAaC,IACfC,EAASC,IACT,CAAE,eAAAC,GAAmBC,IACrBC,EAAOF,IAAiBG,CAAY,GAAK,CAAA,EACzCC,EAAmBC,IAEnBC,EAAcJ,EACjB,OAAQK,GAAQC,EAAU,CAAE,KAAMD,EAAI,SAAS,MAAQX,CAAQ,CAAC,EAChE,IAAKa,IAAO,CACX,GAAGA,EACH,SAAUC,EAAaD,EAAE,SAAS,KAAM,CACtC,GAAGX,EACH,GAAGW,EAAE,SAAS,MAAA,CACf,CACD,EAAA,EAEEE,EAAkBL,EAAY,IAAKG,GAAMA,EAAE,QAAQ,EAGnDG,EAAYC,EAAS,QAAQpB,CAAQ,EACxC,OAAQqB,GAAiCC,EAAeD,CAAK,CAAC,EAC9D,IAAKA,GAAUA,EAAM,MAAM,SAAS,UAAU,EAK3CE,EAHU,CAAC,GAAGJ,EAAW,GAAGD,CAAe,EAGtB,KACxBM,GAAaA,IAAa,UAAUrB,CAAQ,CAAA,EAIzCsB,EAAeN,EAClB,OAAQK,GAAarB,EAAS,SAASqB,CAAQ,CAAC,EAChD,KAAK,CAAC,EAAGE,IAAM,EAAE,OAASA,EAAE,MAAM,EAClC,MAGD,OAAAC,EAACC,EAAA,CACC,UACEL,GAAcE,GAAgBxB,GAAiB,UAAYE,EAE7D,UAAW0B,EAAc,IACzB,MAAO,CACL,QAAS,YACT,GAAI,UACJ,MAAO,UACT,EACC,GAAG3B,EAEH,SAAA,CAAAF,EACAW,EAAiBmB,EAAQ,aAAa,GACrCjB,EAAY,IAAUG,GACnBe,EAAAC,EAAA,CAAsB,SAAUhB,EAAE,SAAU,MAAOA,EAAE,GACpD,SAAAe,EAACE,EAAY,CAAA,KAAMjB,EAAG,aAAcN,CAAc,CAAA,CAAA,EADnCM,EAAE,EAEnB,CACD,CAAA,CAAA,CAAA,CAGT,EAOMgB,EAAa,CAAC,CAClB,SAAAhC,EACA,GAAGkC,CACL,IAA0C,CAClC,MAAAC,EAAOC,EAAQF,EAAM,QAAQ,EAEnC,OACGH,EAAAM,EAAA,CAAI,KAAAF,EAAa,GAAGD,EAClB,SAAAlC,CACH,CAAA,CAEJ,EAEasC,EAAkBC,IAAuB,CACpD,SAAUA,EAAG,UAAY,GACzB,KAAMH,EAAQG,CAAE,CAClB"}